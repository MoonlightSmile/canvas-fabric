{"version":3,"sources":["components/canvas/index.jsx","App.jsx","serviceWorker.js","index.js","App.module.scss"],"names":["canvas","Canvas","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clearPoints","setState","pointList","clear","getPoints","state","start","doDrawing","finish","setPoints","points","arguments","length","undefined","path","map","el","concat","x","y","join","replace","add","fabric","Path","stroke","fill","_this2","document","body","addEventListener","e","preventDefault","button","closeDrawing","keyCode","on","options","point","offsetX","offsetY","toConsumableArray","skipTargetFind","selection","bindEvents","_this$props","_this$props$width","width","_this$props$height","height","react_default","a","createElement","id","Component","App","console","log","refs","toggleDraw","isDraw","main","style","control","className","canvas_Canvas","ref","es_button","onClick","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.599d6664.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { fabric } from 'fabric'\nimport './style.scss'\nlet canvas = null\nexport default class Canvas extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      doDrawing: false,\n      pointList: [],\n      canvas: null,\n    }\n  }\n  clearPoints = () => {\n    this.setState({ pointList: [] }, () => {\n      canvas.clear()\n    })\n    return []\n  }\n  getPoints = () => {\n    return this.state.pointList\n  }\n  start = () => {\n    this.setState({ doDrawing: true })\n  }\n  finish = () => {\n    this.setState({ doDrawing: false })\n  }\n  setPoints = (points = []) => {\n    this.setState({\n      pointList: points\n    })\n    if (points.length < 1) return\n    canvas.clear()\n    let path =\n      points\n        .map(el => `L ${el.x} ${el.y}`)\n        .join('')\n        .replace('L', 'M') + ' z'\n    canvas.add(new fabric.Path(path, { stroke: 'red', fill: '' }))\n  }\n  closeDrawing(canvas) {\n    this.finish()\n    if (this.state.pointList.length < 1) return\n    canvas.clear()\n    let path =\n      this.state.pointList\n        .map(el => `L ${el.x} ${el.y}`)\n        .join('')\n        .replace('L', 'M') + ' z'\n    canvas.add(new fabric.Path(path, { stroke: 'red', fill: '' }))\n  }\n  bindEvents(canvas) {\n    document.body.addEventListener('contextmenu', e => {\n      e.preventDefault()\n      e.button === 2 && this.closeDrawing(canvas)\n    })\n    document.body.addEventListener('keyup', e => {\n      e.keyCode === 27 && this.closeDrawing(canvas)\n    })\n    canvas.on('mouse:down', options => {\n      let point = {\n        x: options.e.offsetX,\n        y: options.e.offsetY,\n      }\n      this.start()\n      this.setState(state => ({ pointList: [...state.pointList, point] }))\n    })\n    canvas.on('mouse:move', options => {\n      if (!this.state.doDrawing) return\n      if (this.state.pointList.length > 0) {\n        canvas.clear()\n        let path =\n          this.state.pointList\n            .map(el => `L ${el.x} ${el.y}`)\n            .join('')\n            .replace('L', 'M') +\n          ` L ${options.e.offsetX} ${options.e.offsetY} z`\n        canvas.add(new fabric.Path(path, { stroke: 'red', fill: '' }))\n      }\n    })\n  }\n  componentDidMount() {\n    canvas = new fabric.Canvas('canvas', {\n      skipTargetFind: true,\n      selection: false,\n    })\n    this.setState({ canvas })\n    this.bindEvents(canvas)\n  }\n  render() {\n    const { width = 640, height = 360 } = this.props\n    return (\n      <div>\n        <canvas id=\"canvas\" width={width} height={height}>\n          当前浏览器不支持canvas，请更换浏览器使用！\n        </canvas>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport style from './App.module.scss'\nimport Canvas from './components/canvas'\nimport { Button } from 'antd'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = { isDraw: false }\n  }\n  getPoints = () => {\n    console.log('getPoints', this.refs.canvas.getPoints())\n  }\n  clearPoints = () => {\n    console.log('clear', this.refs.canvas.clearPoints())\n  }\n  setPoints = () => {\n    const points = [{ x: 10, y: 40 }, { x: 300, y: 80 }]\n    console.log('set', this.refs.canvas.setPoints(points))\n  }\n  start = () => {\n    this.toggleDraw()\n    this.refs.canvas.start()\n  }\n  finish = () => {\n    this.toggleDraw()\n    this.refs.canvas.finish()\n  }\n  toggleDraw() {\n    this.setState(state => ({ isDraw: !state.isDraw }))\n  }\n  render() {\n    const { main, control, button } = style\n    const StartOrFinish = () => {\n      const { isDraw } = this.state\n      return isDraw ? (\n        <Button type=\"primary\" className={button} onClick={this.finish}>\n          结束作图\n        </Button>\n      ) : (\n        <Button className={button} onClick={this.start}>\n          开始作图\n        </Button>\n      )\n    }\n    return (\n      <div className={main}>\n        <Canvas ref=\"canvas\" />\n        <div className={control}>\n          {false && <StartOrFinish />}\n          <Button className={button} onClick={this.getPoints}>\n            获取坐标点\n          </Button>\n          <Button className={button} onClick={this.setPoints}>\n            设置坐标点\n          </Button>\n          <Button className={button} onClick={this.clearPoints}>\n            清空坐标点\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__2a5c9\",\"control\":\"App_control__G3x71\",\"button\":\"App_button__2k4fN\"};"],"sourceRoot":""}